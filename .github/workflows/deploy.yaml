name: deploy

on:
  push:
    branches:
      - main
    paths:
      - terraform/**
      - go.mod
      - go.sum
      - '**/*.go'

permissions:
  id-token: write
  contents: read

defaults:
  run:
    working-directory: ./

jobs:
  publish-apps:
    runs-on: ubuntu-22.04

    environment: actions
    env:
      TZ: 'Asia/Tokyo'

    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: '>=1.21.0'

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v39
        with:
          files_yaml: |
            go:
              - go.mod
              - go.sum
              - '**/*.go'

      - uses: actions/setup-go@v4
      - name: 'Build and publish Go apps'
        if: steps.changed-files.outputs.go_any_changed == 'true'
        env:
          KO_DOCKER_REPO: ${{ vars.DOCKER_REPOSITORY }}
        run: ko build --base-import-paths --sbom none ./cmd/api

  deploy:
    runs-on: ubuntu-22.04
    needs: publish-apps

    environment: actions
    env:
      TZ: 'Asia/Tokyo'
      TF_VAR_repository: ${{ vars.TF_VAR_repository }}
      TF_VAR_project: ${{ vars.TF_VAR_project }}
      TF_VAR_region: ${{ vars.TF_VAR_region }}
      TF_VAR_zone: ${{ vars.TF_VAR_zone }}
      TF_VAR_tf_service_account: ${{ vars.TF_VAR_tf_service_account }}
      TF_VAR_api_domain: ${{ vars.TF_VAR_api_domain }}
      DOCKER_REPOSITORY: ${{ vars.DOCKER_REPOSITORY }}

    steps:
      - uses: actions/checkout@v4

      - name: 'Authenticate to Google Cloud'
        id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ vars.TF_VAR_tf_service_account }}
          access_token_lifetime: 1200s
          create_credentials_file: true

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'

      - uses: hashicorp/setup-terraform@v2

      - name: 'Terraform init'
        run: make tf-init

      - name: 'Terraform deploy'
        run: make tf-deploy
